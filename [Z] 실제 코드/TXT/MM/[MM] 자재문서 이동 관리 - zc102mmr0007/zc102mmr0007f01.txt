*&---------------------------------------------------------------------*
*& Include          ZC102MMR0007F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form display_main_screen
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_main_screen .

  IF go_header_cont IS NOT BOUND.

    PERFORM create_object.
    PERFORM register_tree_event.
    PERFORM build_node.

    CLEAR : gt_header_fcat, gs_header_fcat.
    PERFORM set_header_field_catalog USING : 'X' 'MBLNR' 'ZC102MMT0012' ' ' ' ',
                                             'X' 'RYEAR' 'ZC102MMT0012' ' ' ' ',
                                             ' ' 'BWART_NAME' ' ' ' ' ' ',
                                             ' ' 'CPUDT' 'ZC102MMT0012' ' ' ' ',
                                             ' ' 'WERKS' 'ZC102MMT0012' ' ' ' ',
                                             ' ' 'STLNO' 'ZC102MMT0012' ' ' ' ',
                                             ' ' 'USNAM' 'ZC102MMT0012' ' ' ' '.

    PERFORM set_layout.
    SET HANDLER : lcl_event_handler=>hotspot_click FOR go_header_grid.

    CALL METHOD go_tree->add_nodes
      EXPORTING
        table_structure_name = 'MTREESNODE'
        node_table           = node_table.

    CALL METHOD go_header_grid->set_table_for_first_display
      EXPORTING
        is_variant      = gs_variant
        i_save          = 'A'
        i_default       = 'X'
        is_layout       = gs_header_layout
      CHANGING
        it_outtab       = gt_header
        it_fieldcatalog = gt_header_fcat.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form get_base_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_base_data .

*-- ALV
  CLEAR gt_header.
  SELECT DISTINCT mblnr ryear cpudt usnam bwart werks stlno b~ddtext AS bwart_name
    INTO CORRESPONDING FIELDS OF TABLE gt_header
    FROM zc102mmt0012 AS a
    INNER JOIN dd07t AS b
    ON a~bwart = b~domvalue_l
    AND b~domname = 'ZC102D_MM_BWART'
    WHERE a~bwart IN so_bwart
      AND cpudt IN so_cpudt
      AND ryear IN so_ryear
      AND mblnr IN so_mblnr.

*-- Chart
  SELECT bwart, ryear, COUNT( * ) AS cnt
    INTO TABLE @gt_chart
    FROM zc102mmt0012
    WHERE bwart IN @so_bwart
      AND cpudt IN @so_cpudt
      AND mblnr IN @so_mblnr
      AND ryear IN @so_ryear
    GROUP BY bwart, ryear
    ORDER BY bwart, ryear DESCENDING.

  IF  gt_header IS INITIAL.
    MESSAGE s004 DISPLAY LIKE 'E'.
    STOP.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_header_field_catalog
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM set_header_field_catalog  USING pv_key pv_field pv_table pv_just pv_emph.

  gs_header_fcat = VALUE #(
                     key        = pv_key
                     fieldname  = pv_field
                     ref_table  = pv_table
                     just       = pv_just
                     emphasize  = pv_emph
                    ).

  CASE pv_field.
    WHEN 'MBLNR'.
      gs_header_fcat-hotspot = abap_true.
    WHEN 'RYEAR'.
      gs_header_fcat-coltext = '연도'.
    WHEN 'BWART_NAME'.
      gs_header_fcat-coltext = '자재이동 유형'.

  ENDCASE.

  APPEND gs_header_fcat TO gt_header_fcat.
  CLEAR gs_header_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_layout
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_layout .

  gs_header_layout = VALUE #( zebra      = abap_true
                       cwidth_opt = 'A'
                       sel_mode   = 'D'
                       grid_title = '자재문서 이동 내역').

  gs_line_layout = VALUE #( zebra      = abap_true
                       cwidth_opt = 'A'
                       sel_mode   = 'D'
                       grid_title = '상세 내역').

  gs_variant  = VALUE #( report = sy-repid
                         handle = 'ALV1' ).

ENDFORM.
*&---------------------------------------------------------------------*
*& Form create_object
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM create_object .
**********************************************************************
* Create Container
**********************************************************************
  CREATE OBJECT go_header_cont
    EXPORTING
      side      = cl_gui_docking_container=>dock_at_left
      extension = 5000.

  CREATE OBJECT go_split_cont
    EXPORTING
      parent  = go_header_cont
      rows    = 1
      columns = 2.

  CALL METHOD go_split_cont->get_container
    EXPORTING
      row       = 1
      column    = 1
    RECEIVING
      container = go_left_cont.

  CALL METHOD go_split_cont->get_container
    EXPORTING
      row       = 1
      column    = 2
    RECEIVING
      container = go_right_cont.

  CALL METHOD go_split_cont->set_column_width
    EXPORTING
      id    = 2
      width = 50.

*-- 좌측 내부 splitter
  CREATE OBJECT go_left_split_cont
    EXPORTING
      parent  = go_left_cont
      rows    = 1
      columns = 2.

  CALL METHOD go_left_split_cont->get_container
    EXPORTING
      row       = 1
      column    = 1
    RECEIVING
      container = go_left_left_cont.

  CALL METHOD go_left_split_cont->get_container
    EXPORTING
      row       = 1
      column    = 2
    RECEIVING
      container = go_left_right_cont.

  CALL METHOD go_left_split_cont->set_column_width
    EXPORTING
      id    = 1
      width = 30.

*-- Tree
  CREATE OBJECT go_tree
    EXPORTING
      parent              = go_left_left_cont
      node_selection_mode = cl_gui_simple_tree=>node_sel_mode_single.

**********************************************************************
* ALV & Chart
**********************************************************************
  CREATE OBJECT go_header_grid
    EXPORTING
      i_parent = go_left_right_cont.

  CREATE OBJECT go_chart
    EXPORTING
      parent = go_right_cont.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form display_chart
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_chart .

  CLEAR: go_ixml, go_ixml_sf, go_ixml_docu, go_ixml_ostream,
         go_ixml_encoding, go_chartdata, go_categories,
         go_category, go_series, go_point, go_value.

  CLEAR gv_xstring.

  go_ixml       = cl_ixml=>create( ).
  go_ixml_sf    = go_ixml->create_stream_factory( ).
  go_ixml_docu  = go_ixml->create_document( ).

  go_ixml_encoding = go_ixml->create_encoding(
                        byte_order    = if_ixml_encoding=>co_little_endian
                        character_set = 'utf-8' ).
  go_ixml_docu->set_encoding( encoding = go_ixml_encoding ).

  go_chartdata = go_ixml_docu->create_simple_element(
                    name   = 'ChartData'
                    parent = go_ixml_docu ).

  go_categories = go_ixml_docu->create_simple_element(
                    name   = 'Categories'
                    parent = go_chartdata ).

  PERFORM set_category.
  PERFORM set_chart_value.

  PERFORM design_mode.

  go_chart->set_data( xdata = gv_xstring ).
  go_chart->render( ).

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_category
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_category.

  DATA : lv_ryear     TYPE zc102mmt0012-ryear,
         lt_ryear     TYPE TABLE OF zc102mmt0012-ryear,
         lv_ryear_txt TYPE string.

  CLEAR lt_ryear.

  LOOP AT gt_chart INTO DATA(ls_chart).
    APPEND ls_chart-ryear TO lt_ryear.
  ENDLOOP.

  SORT lt_ryear DESCENDING.
  DELETE ADJACENT DUPLICATES FROM lt_ryear.

  LOOP AT lt_ryear INTO lv_ryear.

    lv_ryear_txt = lv_ryear && '년'.

    go_category = go_ixml_docu->create_simple_element(
                    name   = 'Category'
                    parent = go_categories ).
    go_category->if_ixml_node~set_value( lv_ryear_txt ).

  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_chart_value
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_chart_value.

  DATA: lv_label      TYPE string,
        lv_cnt        TYPE string,
        lv_ryear_text TYPE string,
        lv_bwart      TYPE zc102mmt0012-bwart.

  SORT gt_chart BY bwart ryear DESCENDING.

  LOOP AT gt_chart INTO gs_chart.

    AT NEW bwart.
      " 이동유형 이름 → 시리즈 라벨로 변환
      CASE gs_chart-bwart.
        WHEN '101'.
          lv_label = '입고'.
        WHEN '102'.
          lv_label = '사용 불가 입고'.
        WHEN '103'.
          lv_label = '출고'.
        WHEN '104'.
          lv_label = '반품'.
        WHEN '105'.
          lv_label = '폐기 입고'.
        WHEN '106'.
          lv_label = '폐기 출고'.
        WHEN '107'.
          lv_label = '사료 입고'.
        WHEN '108'.
          lv_label = '사료 출고'.
        WHEN OTHERS.
          CONTINUE.
      ENDCASE.

      go_series = go_ixml_docu->create_simple_element(
                    name   = 'Series'
                    parent = go_chartdata ).
      go_series->set_attribute( name = 'label' value = lv_label ).
    ENDAT.

    lv_cnt = gs_chart-cnt.
    lv_ryear_text = gs_chart-ryear && '년'. " X축과 동일하게

    go_point = go_ixml_docu->create_simple_element(
                 name = 'Point'
                 parent = go_series ).
    go_point->set_attribute( name = 'label'
                             value = lv_ryear_text ).

    go_value = go_ixml_docu->create_simple_element(
                 name = 'Value'
                 parent = go_point ).
    go_value->if_ixml_node~set_value( lv_cnt ).

  ENDLOOP.

*-- 렌더링
  go_ixml_ostream = go_ixml_sf->create_ostream_xstring( gv_xstring ).
  go_ixml_docu->render( go_ixml_ostream ).

ENDFORM.

*&---------------------------------------------------------------------*
*& Form design_mode
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM design_mode .
**********************************************************************
* Chart type : Only Columns and Lines
**********************************************************************
  DATA: l_win_chart   TYPE REF TO cl_gui_chart_engine_win,
        g_design_mode.

  CATCH SYSTEM-EXCEPTIONS move_cast_error = 1.
    l_win_chart ?= go_chart->get_control( ).
  ENDCATCH.

  IF sy-subrc IS INITIAL.

    l_win_chart->set_design_mode( flag = g_design_mode event = 'X' ).
    l_win_chart->restrict_property_events( events = 'ChartType' ).

    CASE abap_true.
      WHEN p_column.
        l_win_chart->restrict_chart_types( charttypes = 'Columns' ).
      WHEN p_line.
        l_win_chart->restrict_chart_types( charttypes = 'Lines' ).
    ENDCASE.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form handle_hotspot_click
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> E_ROW_ID
*&      --> E_COLUMN_ID
*&---------------------------------------------------------------------*
FORM handle_hotspot_click  USING pv_rowid pv_column_id.

  READ TABLE gt_header INTO gs_header INDEX pv_rowid.

  CLEAR gt_line.
  SELECT mblnr batno matnr menge meins
    INTO CORRESPONDING FIELDS OF TABLE gt_line
    FROM zc102mmt0013
    WHERE mblnr EQ gs_header-mblnr.

  CALL SCREEN 110 STARTING AT 50 05.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form display_popup_screen
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_popup_screen .

  IF go_line_cont IS NOT BOUND.

    CLEAR : gt_line_fcat, gs_line_fcat.
    PERFORM set_line_field_catalog USING : 'X' 'MBLNR' 'ZC102MMT0013' ' ' ' ',
                                           'X' 'BATNO' 'ZC102MMT0013' ' ' ' ',
                                           ' ' 'MATNR' 'ZC102MMT0013' 'C' 'X',
                                           ' ' 'MENGE' 'ZC102MMT0013' ' ' ' ',
                                           ' ' 'MEINS' 'ZC102MMT0013' ' ' ' '.
    PERFORM set_layout.
    PERFORM create_line_object.

    SET HANDLER : lcl_event_handler=>hotspot_click FOR go_header_grid.

    CALL METHOD go_line_grid->set_table_for_first_display
      EXPORTING
        is_variant      = gs_variant
        i_save          = 'A'
        i_default       = 'X'
        is_layout       = gs_line_layout
      CHANGING
        it_outtab       = gt_line
        it_fieldcatalog = gt_line_fcat.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form create_line_object
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM create_line_object .

  CREATE OBJECT go_line_cont
    EXPORTING
      container_name = 'POP_CONT'.

  CREATE OBJECT go_line_grid
    EXPORTING
      i_parent = go_line_cont.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_line_field_catalog
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM set_line_field_catalog  USING pv_key pv_field pv_table pv_just pv_emph.

  gs_line_fcat = VALUE #(
                     key        = pv_key
                     fieldname  = pv_field
                     ref_table  = pv_table
                     just       = pv_just
                     emphasize  = pv_emph
                    ).

  CASE pv_field.
    WHEN 'MENGE'.
      gs_line_fcat-qfieldname = 'MEINS'.
      gs_line_fcat-coltext = '수량'.
    WHEN 'MEINS'.
      gs_line_fcat-coltext = '단위'.
  ENDCASE.

  APPEND gs_line_fcat TO gt_line_fcat.
  CLEAR gs_line_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_init_value
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_init_value .

*-- Selections creen 자재문서 번호 F4
  CLEAR : gt_mblnr, gs_mblnr.
  SELECT DISTINCT mblnr
    INTO CORRESPONDING FIELDS OF TABLE gt_mblnr
    FROM zc102mmt0012.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form f4_mblnr
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&---------------------------------------------------------------------*
FORM f4_mblnr.

  DATA: lt_return TYPE TABLE OF ddshretval WITH HEADER LINE,
        lv_field  TYPE help_info-dynprofld.

  lv_field = 'SO_MBLNR-LOW'.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      retfield        = 'MBLNR'
      dynpprog        = sy-repid
      dynpnr          = sy-dynnr
      dynprofield     = lv_field
      value_org       = 'S'
      window_title    = '자재문서 번호'
    TABLES
      value_tab       = gt_mblnr
      return_tab      = lt_return
    EXCEPTIONS
      parameter_error = 1
      no_values_found = 2
      OTHERS          = 3.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form get_tree_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_tree_data .

  SELECT DISTINCT a~ryear a~bwart b~ddtext AS bwart_name
     INTO CORRESPONDING FIELDS OF TABLE gt_tree
    FROM zc102mmt0012 AS a
     INNER JOIN dd07t AS b
    ON a~bwart = b~domvalue_l
   AND b~domname = 'ZC102D_MM_BWART'
    WHERE a~ryear IN so_ryear
      AND a~bwart IN so_bwart
    ORDER BY a~ryear DESCENDING a~bwart.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form register_tree_event
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM register_tree_event .

  event-eventid = cl_gui_simple_tree=>eventid_node_double_click.
  event-appl_event = 'X'.
  APPEND event TO events.

  CALL METHOD go_tree->set_registered_events
    EXPORTING
      events                    = events
    EXCEPTIONS
      cntl_error                = 1
      cntl_system_error         = 2
      illegal_event_combination = 3
      OTHERS                    = 4.

  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  SET HANDLER lcl_event_handler=>handle_node_double_click FOR go_tree.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form search_clicked_node_info
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> NODE_KEY
*&---------------------------------------------------------------------*
FORM search_clicked_node_info  USING pv_node_key.

  DATA : lv_ryear TYPE zc102mmt0012-ryear,
         lv_bwart TYPE zc102mmt0012-bwart.

  CLEAR : lv_ryear, lv_bwart.

  SPLIT pv_node_key AT '_' INTO lv_ryear lv_bwart.

  IF lv_bwart EQ '000'.

    SELECT DISTINCT mblnr ryear cpudt usnam bwart stlno werks b~ddtext AS bwart_name
      INTO CORRESPONDING FIELDS OF TABLE gt_header
      FROM zc102mmt0012 AS a
      INNER JOIN dd07t AS b
        ON a~bwart = b~domvalue_l
       AND b~domname = 'ZC102D_MM_BWART'
      WHERE a~ryear = lv_ryear.

    CLEAR gt_chart.
    SELECT bwart, ryear, COUNT( * ) AS cnt
      INTO TABLE @gt_chart
      FROM zc102mmt0012
      WHERE ryear = @lv_ryear
      GROUP BY bwart, ryear
      ORDER BY bwart, ryear DESCENDING.

  ELSE.

    CLEAR gt_header.
    SELECT DISTINCT mblnr ryear cpudt usnam bwart stlno werks b~ddtext AS bwart_name
      INTO CORRESPONDING FIELDS OF TABLE gt_header
      FROM zc102mmt0012 AS a
      INNER JOIN dd07t AS b
      ON a~bwart = b~domvalue_l
      AND b~domname = 'ZC102D_MM_BWART'
      WHERE a~ryear = lv_ryear
        AND a~bwart = lv_bwart.

    CLEAR gt_chart.
    SELECT bwart, ryear, COUNT( * ) AS cnt
    INTO TABLE @gt_chart
    FROM zc102mmt0012
    WHERE ryear = @lv_ryear
      AND bwart = @lv_bwart
    GROUP BY bwart, ryear
    ORDER BY bwart, ryear DESCENDING.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form build_node
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM build_node .

  DATA: node     TYPE mtreesnode,
        lv_ryear TYPE string.

  LOOP AT gt_tree INTO gs_tree.
*--------------------------------------------------------------------*
    ON CHANGE OF gs_tree-ryear.
      MOVE gs_tree-ryear TO lv_ryear.
      node-node_key  = gs_tree-ryear.
*      node-relatkey = 'ROOT'.
      node-isfolder  = 'X'.
      node-n_image   = '@04@'. " 접은 이미지
      node-exp_image = '@05@'. " 펼친 이미지
      node-text = lv_ryear.
      APPEND node TO node_table.
      CLEAR node.
    ENDON.
*--------------------------------------------------------------------*
    node-node_key = gs_tree-ryear && '_' && gs_tree-bwart.
    node-text = gs_tree-bwart_name.
    node-relatkey = gs_tree-ryear.
    node-isfolder = ' '.
    APPEND node TO node_table.
    CLEAR: node.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form create_move
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM create_move .

  CALL SCREEN 120 STARTING AT 05 10.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 758
