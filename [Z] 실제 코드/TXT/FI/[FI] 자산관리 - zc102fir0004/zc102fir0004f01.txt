*&---------------------------------------------------------------------*
*& Include          ZC102FIR0004F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form main_screen_ctrl
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM main_screen_ctrl .
  IF go_container IS NOT BOUND.
    CLEAR : gs_fcat, gt_fcat.
    PERFORM set_fcat USING : 'X' 'WERKS'  'ZC102FIT0012' 'C' ' ',
                             'X' 'ANLN1'  'ZC102FIT0012' ' ' ' ',
                             'X' 'GJAHR'  '            ' 'C' ' ',
                             ' ' 'BUYPR'  'ZC102FIT0012' ' ' ' ',
                             ' ' 'DESUM'  'ZC102FIT0012' ' ' ' ',
                             ' ' 'BVALU'  'ZC102FIT0012' ' ' 'X',
                             ' ' 'DEPPR01' '           ' ' ' ' ',
                             ' ' 'DEPPR02' '           ' ' ' ' ',
                             ' ' 'DEPPR03' '           ' ' ' ' ',
                             ' ' 'DEPPR04' '           ' ' ' ' ',
                             ' ' 'DEPPR05' '           ' ' ' ' ',
                             ' ' 'DEPPR06' '           ' ' ' ' ',
                             ' ' 'DEPPR07' '           ' ' ' ' ',
                             ' ' 'DEPPR08' '           ' ' ' ' ',
                             ' ' 'DEPPR09' '           ' ' ' ' ',
                             ' ' 'DEPPR10' '           ' ' ' ' ',
                             ' ' 'DEPPR11' '           ' ' ' ' ',
                             ' ' 'DEPPR12' '           ' ' ' ' ',
                             ' ' 'WAERS'   '           ' ' ' ' '.
    PERFORM set_layout USING TEXT-001.
    PERFORM set_variant USING 'ALV1'.
    PERFORM sort_data.
    PERFORM create_obj.
    PERFORM register_tree_event.
    PERFORM build_node.
    SET HANDLER : lcl_event_handler=>hotspot_click            FOR go_alv_grid,
                  lcl_event_handler=>top_of_page              FOR go_alv_grid,
                  lcl_event_handler=>handle_node_double_click FOR go_tree.
    PERFORM display_screen.
    PERFORM register_title.
    PERFORM refresh_table.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form SET_FCAT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM set_fcat USING pv_key pv_field pv_table pv_just pv_emph.
  gs_fcat-key       = pv_key.
  gs_fcat-fieldname = pv_field.
  gs_fcat-ref_table = pv_table.
  gs_fcat-just      = pv_just.
  gs_fcat-emphasize = pv_emph.

  CASE pv_field.
    WHEN 'BUYPR' OR 'BVALU' OR 'DESUM'.
      gs_fcat-cfieldname = 'WAERS'.

    WHEN 'ANLN1'.
      gs_fcat-hotspot = abap_true.

    WHEN 'GJAHR'.
      gs_fcat-coltext = '회계연도'.

    WHEN 'WAERS'.
      gs_fcat-coltext = '통화키'.

    WHEN 'DEPPR01'.
      gs_fcat-coltext = '1월'.
      gs_fcat-cfieldname = 'WAERS'.
      gs_fcat-do_sum = abap_true.

    WHEN 'DEPPR02'.
      gs_fcat-coltext = '2월'.
      gs_fcat-cfieldname = 'WAERS'.
      gs_fcat-do_sum = abap_true.

    WHEN 'DEPPR03'.
      gs_fcat-coltext = '3월'.
      gs_fcat-cfieldname = 'WAERS'.
      gs_fcat-do_sum = abap_true.

    WHEN 'DEPPR04'.
      gs_fcat-coltext = '4월'.
      gs_fcat-cfieldname = 'WAERS'.
      gs_fcat-do_sum = abap_true.

    WHEN 'DEPPR05'.
      gs_fcat-coltext = '5월'.
      gs_fcat-cfieldname = 'WAERS'.
      gs_fcat-do_sum = abap_true.

    WHEN 'DEPPR06'.
      gs_fcat-coltext = '6월'.
      gs_fcat-cfieldname = 'WAERS'.
      gs_fcat-do_sum = abap_true.

    WHEN 'DEPPR07'.
      gs_fcat-coltext = '7월'.
      gs_fcat-cfieldname = 'WAERS'.
      gs_fcat-do_sum = abap_true.

    WHEN 'DEPPR08'.
      gs_fcat-coltext = '8월'.
      gs_fcat-cfieldname = 'WAERS'.
      gs_fcat-do_sum = abap_true.

    WHEN 'DEPPR09'.
      gs_fcat-coltext = '9월'.
      gs_fcat-cfieldname = 'WAERS'.
      gs_fcat-do_sum = abap_true.

    WHEN 'DEPPR10'.
      gs_fcat-coltext = '10월'.
      gs_fcat-cfieldname = 'WAERS'.
      gs_fcat-do_sum = abap_true.

    WHEN 'DEPPR11'.
      gs_fcat-coltext = '11월'.
      gs_fcat-cfieldname = 'WAERS'.
      gs_fcat-do_sum = abap_true.

    WHEN 'DEPPR12'.
      gs_fcat-coltext = '12월'.
      gs_fcat-cfieldname = 'WAERS'.
      gs_fcat-do_sum = abap_true.

  ENDCASE.

  APPEND gs_fcat TO gt_fcat.
  CLEAR gs_fcat.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_layout
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_layout USING pv_title.
  gs_layout-zebra      = abap_true.
  gs_layout-cwidth_opt = 'A'.
  gs_layout-sel_mode   = 'B'.
  gs_layout-stylefname = 'CELL_TAB'.
  gs_layout-grid_title = pv_title.
  gs_layout-totals_bef = abap_true.
*  gs_layout-no_totline = abap_true.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_variant
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&---------------------------------------------------------------------*
FORM set_variant  USING pv_handle.
  gs_variant-report = sy-repid.
  gs_variant-handle = pv_handle.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form create_obj
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM create_obj .
*-- Top-of-page
  CREATE OBJECT go_top_cont
    EXPORTING
      repid     = sy-cprog
      dynnr     = sy-dynnr
      side      = go_top_cont->dock_at_top
      extension = 50.

*-- Split Container
  CREATE OBJECT go_container
    EXPORTING
      repid     = sy-cprog
      dynnr     = sy-dynnr
      side      = go_container->dock_at_left
      extension = 5000.

*-- For Tree
  CREATE OBJECT go_base_split_cont
    EXPORTING
      parent  = go_container
      rows    = 1
      columns = 2.

  CALL METHOD go_base_split_cont->get_container
    EXPORTING
      row       = 1
      column    = 1
    RECEIVING
      container = go_left_cont.

  CALL METHOD go_base_split_cont->get_container
    EXPORTING
      row       = 1
      column    = 2
    RECEIVING
      container = go_right_cont.

*-- For ALV
  CREATE OBJECT go_split_cont
    EXPORTING
      parent  = go_right_cont
      rows    = 2
      columns = 1.

  CALL METHOD go_split_cont->get_container
    EXPORTING
      row       = 1
      column    = 1
    RECEIVING
      container = go_tcont.

  CALL METHOD go_split_cont->get_container
    EXPORTING
      row       = 2
      column    = 1
    RECEIVING
      container = go_bcont.

*-- ALV
  CREATE OBJECT go_alv_grid
    EXPORTING
      i_parent = go_tcont.

*-- Tree
  CREATE OBJECT go_tree
    EXPORTING
      parent              = go_left_cont
      node_selection_mode = cl_gui_simple_tree=>node_sel_mode_single.

*-- Chart
  CREATE OBJECT go_chart
    EXPORTING
      parent = go_bcont.

*-- Top-of-page
  CREATE OBJECT go_dyndoc_id " cl_dd_document
    EXPORTING
      style = 'ALV_GRID'.


*-- 가로 조절
  CALL METHOD go_base_split_cont->set_column_width
    EXPORTING
      id    = 2
      width = 85.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form display_screen
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_screen .
  CALL METHOD go_alv_grid->set_table_for_first_display
    EXPORTING
      is_variant      = gs_variant
      i_save          = 'A'
      i_default       = 'X'
      is_layout       = gs_layout
    CHANGING
      it_outtab       = gt_body
      it_fieldcatalog = gt_fcat
      it_sort         = gt_sort.

*-- For Tree
  CALL METHOD go_tree->add_nodes
    EXPORTING
      table_structure_name = 'MTREESNODE'
      node_table           = node_table.

  CALL METHOD go_tree->expand_node
    EXPORTING
      node_key = 'ROOT'.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form get_base_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_log_data .
  DATA : lv_dbcnt TYPE i.

  CLEAR : gs_body, gt_body.

  SELECT bukrs anln1 gjahr werks buypr bvalu desum
         deppr01 deppr02 deppr03 deppr04 deppr05
         deppr06 deppr07 deppr08 deppr09 deppr10
         deppr11 deppr12 waers
    INTO CORRESPONDING FIELDS OF TABLE gt_body
    FROM zc102fit0012
    WHERE gjahr IN so_gjahr
      AND status <> 'X'
      AND bukrs <> ''
    ORDER BY werks anln1 ASCENDING.

  lv_dbcnt = lines( gt_body ).

  IF gt_body IS INITIAL.
    MESSAGE s004 DISPLAY LIKE 'E'.
    STOP.
  ELSE.
    MESSAGE s010 WITH lv_dbcnt.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form handle_hotspot_click
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> E_COLUMN_ID
*&      --> E_ROW_ID
*&---------------------------------------------------------------------*
FORM handle_hotspot_click  USING pv_column_id pv_row_id.
  READ TABLE gt_body INTO gs_body INDEX pv_row_id.

  CLEAR : gt_master, gs_master.
  SELECT bukrs anln1 useye remvl
         depmt waers txt50 erdat
    INTO CORRESPONDING FIELDS OF TABLE gt_master
    FROM zc102fit0007
    WHERE anln1 = gs_body-anln1.

  CALL SCREEN 110 STARTING AT 10 10.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  POP_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE exit INPUT.
  CALL METHOD : go_alv_grid->free,
                go_tree->free,
                go_tcont->free,
                go_bcont->free,
                go_split_cont->free,
                go_left_cont->free,
                go_right_cont->free,
                go_base_split_cont->free,
                go_container->free.

  FREE : go_alv_grid, go_tree, go_tcont, go_bcont,
         go_split_cont, go_left_cont, go_right_cont,
         go_base_split_cont, go_container.

  LEAVE TO SCREEN 0.

ENDMODULE.
*&---------------------------------------------------------------------*
*& Form pop_screen_ctrl
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM pop_screen_ctrl .
  IF go_pop_cont IS NOT BOUND.
    CLEAR : gs_pop_fcat, gt_pop_fcat.
    PERFORM set_pop_fcat USING : 'X' 'BUKRS' '            ' 'C' '',
                                 'X' 'ANLN1' 'ZC102FIT0007' ' ' ' ',
                                 ' ' 'USEYE' 'ZC102FIT0007' ' ' ' ',
                                 ' ' 'REMVL' 'ZC102FIT0007' ' ' ' ',
                                 ' ' 'DEPMT' 'ZC102FIT0007' 'C' ' ',
                                 ' ' 'WAERS' '            ' 'C' ' ',
                                 ' ' 'ERDAT'  ' '           'C' ' ',
                                 ' ' 'TXT50'  ' '           ' ' 'X',
                                 ' ' 'ATTACH' ' '           'C' ' '.
    PERFORM set_layout USING TEXT-002.
    PERFORM set_variant USING 'ALV2'.
    PERFORM create_pop_obj.
    SET HANDLER : lcl_event_handler=>handle_hotspot FOR go_pop_grid.
    PERFORM display_popup_screen.
    PERFORM refresh_pop_table.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_pop_fcat
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM set_pop_fcat USING pv_key pv_field pv_table pv_just pv_emph.
  gs_pop_fcat-key       = pv_key.
  gs_pop_fcat-fieldname = pv_field.
  gs_pop_fcat-ref_table = pv_table.
  gs_pop_fcat-just      = pv_just.
  gs_pop_fcat-emphasize = pv_emph.

  CASE pv_field.
    WHEN 'BUKRS'.
      gs_pop_fcat-coltext = '회계연도'.
    WHEN 'REMVL'.
      gs_pop_fcat-cfieldname = 'WAERS'.
    WHEN 'WAERS'.
      gs_pop_fcat-coltext = '통화키'.
    WHEN 'ERDAT'.
      gs_pop_fcat-coltext = '취득일'.
    WHEN 'TXT50'.
      gs_pop_fcat-coltext = '비고'.
    WHEN 'ATTACH'.
      gs_pop_fcat-coltext = '증빙 자료'.
      gs_pop_fcat-icon    = abap_true.
      gs_pop_fcat-hotspot = abap_true.
  ENDCASE.

  APPEND gs_pop_fcat TO gt_pop_fcat.
  CLEAR : gs_pop_fcat.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form create_pop_obj
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM create_pop_obj .
  CREATE OBJECT go_pop_cont
    EXPORTING
      container_name = 'POP_CONT'.

  CREATE OBJECT go_pop_grid
    EXPORTING
      i_parent = go_pop_cont.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form display_popup_screen
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_popup_screen .
  CALL METHOD go_pop_grid->set_table_for_first_display
    EXPORTING
      is_variant      = gs_variant
      i_save          = 'A'
      i_default       = 'X'
      is_layout       = gs_layout
    CHANGING
      it_outtab       = gt_master
      it_fieldcatalog = gt_pop_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  CASE gv_okcode.
    WHEN 'CRTE'.
      CALL SCREEN 120 STARTING AT 50 10.
      PERFORM get_log_data.
      PERFORM refresh_table.
*    WHEN 'EXCT'.
*      PERFORM depreciation.
    WHEN 'DELT'.
      PERFORM delete_asset.
      PERFORM get_log_data.
      PERFORM get_master_data.
      PERFORM refresh_table.
    WHEN 'DOCU'.
      CALL SCREEN 140 STARTING AT 50 10.
  ENDCASE.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Form get_dep_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM depreciation .
*  FIELD-SYMBOLS : <fs_deppr> TYPE any.
*
*-- For Depreciation
*  DATA: lv_month     TYPE n LENGTH 2,
*        lv_fieldname TYPE fieldname,
*        lv_deprc     TYPE wrbtr,
*        lv_buypr     TYPE zc102fit0012-buypr,
*        lv_bvalu     TYPE zc102fit0012-bvalu,
*        lv_remvl     TYPE zc102fit0007-remvl,
*        lv_useye     TYPE zc102fit0007-useye,
*        lv_desum     TYPE zc102fit0012-desum,
*        lv_check.
*
*-- For Create Docu
*  DATA : lv_sum TYPE zc102fit0010-wrbtr.
*
*  SORT gt_body BY werks anln1 ASCENDING.
*
*  CLEAR : gs_master, gs_body, gv_tabix, lv_sum.
*
*  lv_month = sy-datum+4(2).
*  lv_month = 04.
*
*  CONCATENATE 'DEPPR' lv_month INTO lv_fieldname.
*
*  LOOP AT gt_body INTO gs_body WHERE gjahr = sy-datum(4).
*    gv_tabix = sy-tabix.
*
*    CLEAR : lv_buypr, lv_desum, lv_deprc, gv_deppr,
*            lv_remvl, lv_useye, gs_master.
*
*    READ TABLE gt_master INTO gs_master WITH KEY anln1 = gs_body-anln1.
*
*    IF gs_body-anln1 = gs_master-anln1.
*    IF sy-subrc = 0.
*      gs_body-gjahr = sy-datum(4).
*
*-- For Calculation
*      lv_remvl = gs_master-remvl.
*      lv_useye = gs_master-useye.
*      lv_buypr = gs_body-buypr.
*      lv_bvalu = gs_body-bvalu.
*      lv_desum = gs_body-desum.
*
*-- 월별 감가상각비 계산
*      lv_deprc = ( lv_buypr - lv_remvl ) / lv_useye.
*      gv_deppr = lv_deprc / 12.
*
*-- 감가상각비가 장부가액 이상이면 감가상각 중단
*      IF gv_deppr > ( lv_buypr - lv_desum ).
*        CLEAR gv_deppr.
*        CONTINUE.
*      ENDIF.
*
*-- 감가상각 계상 월에 반영
*      ASSIGN COMPONENT lv_fieldname OF STRUCTURE gs_body TO <fs_deppr>.
*      IF <fs_deppr> IS ASSIGNED AND <fs_deppr> IS INITIAL.
*        <fs_deppr> = gv_deppr.
*        lv_check = 'X'.
*      ELSE.
*        EXIT.
*      ENDIF.
*
*      lv_desum = gs_body-desum + gv_deppr.
*      gs_body-desum = lv_desum.
*      gs_body-bvalu = lv_buypr - lv_desum.
*
*      MODIFY gt_body FROM gs_body INDEX gv_tabix.
*
*-- 전표 생성 금액
*      lv_sum += gv_deppr.
*    ENDIF.
*
*    UNASSIGN <fs_deppr>.
*
*  ENDLOOP.
*
*  SORT gt_body BY werks anln1 ASCENDING.
*
*-- 이미 감가상각이 완료된 월이면 감가상각 중복 실행 방지
*  IF lv_check = abap_false.
*    MESSAGE s001 WITH TEXT-006 DISPLAY LIKE 'E'.
*    EXIT.
*  ENDIF.
*
*  MODIFY zc102fit0012 FROM TABLE gt_body.
*
*  IF sy-subrc = 0.
*    MESSAGE s001 WITH TEXT-003.
*    CLEAR lv_check.
*    COMMIT WORK.
*  ELSE.
*    MESSAGE s001 WITH TEXT-004 DISPLAY LIKE 'W'.
*    ROLLBACK WORK.
*  ENDIF.
*
*-- Create Docu
*  CALL FUNCTION 'ZFM_CL102_FI_03'
*    EXPORTING
*      iv_wrbtr = lv_sum
*    IMPORTING
*      ev_num   = gv_docu_num.
*
*  PERFORM refresh_table.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form get_master_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_master_data .
  CLEAR : gt_master, gs_master.

  SELECT bukrs anln1 useye remvl
         depmt waers txt50 erdat
    INTO CORRESPONDING FIELDS OF TABLE gt_master
    FROM zc102fit0007
    WHERE status <> 'X'.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_init_value
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_value .
  zc102fit0007-bukrs = '1000'.
  zc102fit0007-depmt = '정액법'.
  zc102fit0012-waers = 'KRW'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  EXIT_CPOP  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE exit_cpop INPUT.
  PERFORM clear_screen.
  LEAVE TO SCREEN 0.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Form create_asset
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM create_asset .
  DATA : lt_master_save TYPE TABLE OF zc102fit0007,
         ls_master_save TYPE zc102fit0007,
         lt_body_save   TYPE TABLE OF zc102fit0012,
         ls_body_save   TYPE zc102fit0012.

  CLEAR : lt_master_save, ls_master_save,
          lt_body_save, ls_body_save.

  IF zc102fit0007-useye = 0.
    MESSAGE s001 WITH TEXT-005 DISPLAY LIKE 'E'.
    EXIT.

  ENDIF.

  IF gv_check = abap_false.
    MESSAGE s000 WITH TEXT-007 DISPLAY LIKE 'E'.
    RETURN.
  ELSE.
    PERFORM popup_confirm USING TEXT-s01 CHANGING gv_answer.
  ENDIF.

  CHECK gv_answer EQ '1'.

*-- 자산 마스터 세팅
  ls_master_save-bukrs = zc102fit0007-bukrs.
  ls_master_save-anln1 = gv_num.
  ls_master_save-useye = zc102fit0007-useye.
  ls_master_save-remvl = zc102fit0007-remvl.
  ls_master_save-depmt = zc102fit0007-depmt.
  ls_master_save-txt50 = zc102fit0007-txt50.
  ls_master_save-erdat = sy-datum(6).
  ls_master_save-waers = zc102fit0012-waers.

  APPEND ls_master_save TO lt_master_save.

*-- 자산 관리 데이터 세팅
  ls_body_save-bukrs = '1000'.
  ls_body_save-gjahr = sy-datum(4).
  ls_body_save-anln1 = ls_master_save-anln1.
  ls_body_save-bvalu = zc102fit0012-buypr.
  ls_body_save-buypr = zc102fit0012-buypr.
  ls_body_save-werks = zc102fit0012-werks.
  ls_body_save-waers = zc102fit0012-waers.

  APPEND ls_body_save TO lt_body_save.

*-- DB 저장
  MODIFY zc102fit0007 FROM TABLE lt_master_save.
  MODIFY zc102fit0012 FROM TABLE lt_body_save.
  PERFORM clear_screen.

  IF sy-subrc = 0.
    MESSAGE s027 WITH gv_num. " 저장 성공
    COMMIT WORK.
    LEAVE TO SCREEN 0.
  ELSE.
    MESSAGE s028 DISPLAY LIKE 'W'. " 저장 실패
    ROLLBACK WORK.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form popup_confirm
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      <-- GV_ANSWER
*&---------------------------------------------------------------------*
FORM popup_confirm  USING pv_text CHANGING pv_answer.
  CALL FUNCTION 'POPUP_TO_CONFIRM'
    EXPORTING
      titlebar              = ' '
      text_question         = pv_text
      text_button_1         = '네'
      icon_button_1         = 'ICON_OKAY'
      text_button_2         = '아니오'
      icon_button_2         = 'ICON_CANCEL'
      default_button        = '2'
      display_cancel_button = ' '
    IMPORTING
      answer                = pv_answer.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form clear_screen
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM clear_screen .

  CLEAR : zc102fit0007-bukrs, zc102fit0012-buypr,
          zc102fit0007-useye, zc102fit0007-remvl,
          zc102fit0007-depmt, zc102fit0007-txt50,
          zc102fit0012-werks, gv_check.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form sort_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM sort_data.
  CLEAR : gs_sort, gt_sort.

  gs_sort-spos      = 1.
  gs_sort-fieldname = 'WERKS'.
  gs_sort-up        = abap_true.
  gs_sort-subtot    = abap_true.

  APPEND gs_sort TO gt_sort.

  CLEAR : gs_sort.

*  gs_sort-spos      = 2.
*  gs_sort-fieldname = 'ANLN1'.
*  gs_sort-up        = abap_true.
*
*  APPEND gs_sort TO gt_sort.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form refresh_table
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM refresh_table .
  CALL METHOD go_alv_grid->refresh_table_display.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form event_top_of_page
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM event_top_of_page .
  DATA : lr_dd_table TYPE REF TO cl_dd_table_element,
         col_field   TYPE REF TO cl_dd_area,
         col_value   TYPE REF TO cl_dd_area.

  DATA : lv_text TYPE sdydo_text_element.

  CALL METHOD go_dyndoc_id->add_table
    EXPORTING
      no_of_columns = 2
      border        = '0'
    IMPORTING
      table         = lr_dd_table.

*-- Set column
  CALL METHOD lr_dd_table->add_column
    IMPORTING
      column = col_field.

  CALL METHOD lr_dd_table->add_column
    IMPORTING
      column = col_value.

  lv_text = '1000'.
  PERFORM add_row USING lr_dd_table col_field col_value '회사 코드' lv_text.

  lv_text = sy-datum(4) && '년'.
  PERFORM add_row USING lr_dd_table col_field col_value '회계 연도' lv_text.

  lv_text = '매월 말'.
  PERFORM add_row USING lr_dd_table col_field col_value '평가 시기' lv_text.

  PERFORM set_top_of_page.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form add_row
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> LR_DD_TABLE
*&      --> COL_FIELD
*&      --> COL_VALUE
*&      --> P_
*&      --> LV_TEXT
*&---------------------------------------------------------------------*
FORM add_row USING pr_dd_table  TYPE REF TO cl_dd_table_element
                   pv_col_field TYPE REF TO cl_dd_area
                   pv_col_value TYPE REF TO cl_dd_area
                   pv_field
                   pv_text.

  DATA : lv_text TYPE sdydo_text_element.

*-- Field.
  lv_text = pv_field.

  CALL METHOD pv_col_field->add_text
    EXPORTING
      text         = lv_text
      sap_emphasis = cl_dd_document=>strong
      sap_color    = cl_dd_document=>list_heading_inv.

  CALL METHOD pv_col_field->add_gap
    EXPORTING
      width = 3.

*-- Value.
  lv_text = pv_text.

  CALL METHOD pv_col_value->add_text
    EXPORTING
      text         = lv_text
      sap_emphasis = cl_dd_document=>heading
      sap_color    = cl_dd_document=>list_negative_inv.

  CALL METHOD pv_col_value->add_gap
    EXPORTING
      width = 3.

  CALL METHOD pr_dd_table->new_row.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_top_of_page
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_top_of_page .
*-- Creating html control
  IF go_html_cntrl IS INITIAL.
    CREATE OBJECT go_html_cntrl
      EXPORTING
        parent = go_top_cont.
  ENDIF.

  CALL METHOD go_dyndoc_id->merge_document.
  go_dyndoc_id->html_control = go_html_cntrl.

*-- Display document
  CALL METHOD go_dyndoc_id->display_document
    EXPORTING
      reuse_control      = 'X'
      parent             = go_top_cont
    EXCEPTIONS
      html_display_error = 1.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form register_title
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM register_title .
  CALL METHOD go_dyndoc_id->initialize_document
    EXPORTING
      background_color = cl_dd_area=>col_textarea.

  CALL METHOD go_alv_grid->list_processing_events
    EXPORTING
      i_event_name = 'TOP_OF_PAGE'
      i_dyndoc_id  = go_dyndoc_id.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form display_chart
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_chart .
  PERFORM set_chart_data.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_chart_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_chart_data .

  CLEAR : go_ixml,
          go_ixml_sf,
          go_ixml_docu,
          go_ixml_ostream,
          go_ixml_encoding,
          go_chartdata,
          go_categories,
          go_category,
          go_series,
          go_point,
          go_value.

  CLEAR : gv_xstring.

  go_ixml = cl_ixml=>create(  ).
  go_ixml_sf = go_ixml->create_stream_factory( ).

  go_ixml_docu = go_ixml->create_document( ).

  go_ixml_encoding = go_ixml->create_encoding(
                       byte_order    = if_ixml_encoding=>co_little_endian
                       character_set = 'utf-8' ).

  go_ixml_docu->set_encoding( encoding = go_ixml_encoding ).

*-- Now build a DOM, representing an XML document with chart data
  go_chartdata = go_ixml_docu->create_simple_element(
                                        name   = 'ChartData'
                                        parent = go_ixml_docu ).
*  go_chartdata->set_attribute( name = 'chart_type' value = 'Line' ).

*-- Categories (parent)
  go_categories = go_ixml_docu->create_simple_element(
                                        name   = 'Categories'
                                        parent = go_chartdata ).

  PERFORM set_category_value.
  PERFORM set_chart_value.

  go_chart->set_data( xdata = gv_xstring ).
  go_chart->render( ).

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_category_value
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_category_value .

  DATA : lv_value TYPE string.

*-- Categories (children)
  go_category = go_ixml_docu->create_simple_element(
                                        name   = 'Category'
                                        parent = go_categories ).
  go_category->if_ixml_node~set_value( '장부가액' ).


  go_category = go_ixml_docu->create_simple_element(
                                      name   = 'Category'
                                      parent = go_categories ).
  go_category->if_ixml_node~set_value( '감가상각누계액' ).

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_chart_value
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_chart_value .

  DATA : lv_value     TYPE string.

  LOOP AT gt_body INTO gs_body.

    lv_value = gs_body-anln1.

*-- Build series (we need only 1)
    go_series = go_ixml_docu->create_simple_element(
                                                      name = 'Series'
                                                      parent = go_chartdata ).
    go_series->set_attribute( name  = 'label'
                              value = lv_value ). "'Series1' ).

*-- Price category
    lv_value = gs_body-bvalu.

    go_point = go_ixml_docu->create_simple_element(
                                                    name = 'Point'
                                                    parent = go_series ).
    go_point->set_attribute( name  = 'label'
                             value = lv_value ).

    go_value = go_ixml_docu->create_simple_element(
                                                    name = 'Value'
                                                    parent = go_point ).

    go_value->if_ixml_node~set_value( lv_value ).

*-- Book value category
    lv_value = gs_body-desum.

    go_point = go_ixml_docu->create_simple_element(
                                                    name = 'Point'
                                                    parent = go_series ).
    go_point->set_attribute( name  = 'label'
                             value = lv_value ).

    go_value = go_ixml_docu->create_simple_element(
                                                    name = 'Value'
                                                    parent = go_point ).

    go_value->if_ixml_node~set_value( lv_value ).

  ENDLOOP.

*-- create ostream (into string variable) and render document into stream
  go_ixml_ostream = go_ixml_sf->create_ostream_xstring( gv_xstring ).
  go_ixml_docu->render( go_ixml_ostream ). "here f_xstring is filled

ENDFORM.
*&---------------------------------------------------------------------*
*& Form call_gos
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> GS_BODY_ANLN1
*&      --> GS_BODY_GJAHR
*&---------------------------------------------------------------------*
FORM call_gos  USING pv_anln1 pv_bukrs pv_mode.
  DATA : ls_object TYPE sibflporb,
         lv_mode.

  CLEAR ls_object.

  ls_object-typeid = gc_typeid. " 임의로 ID 설정
  ls_object-catid  = gc_catid.

  CONCATENATE pv_anln1 pv_bukrs INTO ls_object-instid.

  lv_mode = pv_mode.

  CALL FUNCTION 'GOS_ATTACHMENT_LIST_POPUP'
    EXPORTING
      is_object = ls_object
      ip_mode   = lv_mode.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form handle_hotspot_click_pop
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> E_COLUMN_ID
*&      --> E_ROW_ID
*&---------------------------------------------------------------------*
FORM handle_hotspot USING ps_row TYPE lvc_s_row
                          ps_col TYPE lvc_s_col.
  READ TABLE gt_master INTO gs_master INDEX ps_row-index.

  IF sy-subrc <> 0.
    EXIT.
  ENDIF.

  PERFORM call_gos USING gs_master-anln1 gs_master-bukrs 'D'.
  PERFORM get_single_master.
  PERFORM check_attach.
  PERFORM refresh_pop_table.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form refresh_pop_table
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM refresh_pop_table .
  CALL METHOD go_pop_grid->refresh_table_display
    EXPORTING
      i_soft_refresh = space
      is_stable      = gs_stable.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form check_attach
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM check_attach .
  DATA : ls_attach TYPE srgbtbrel,
         lt_attach LIKE TABLE OF ls_attach,
         lv_instid TYPE srgbtbrel-instid_a.

  CLEAR   : ls_attach.
  REFRESH : lt_attach.

* 업로드한 Typid 로 기존에 업로드 되어 있는지 체크
  SELECT brelguid reltype  instid_a typeid_a catid_a instid_b typeid_b
         catid_b  logsys_a arch_a   logsys_b arch_b  utctime  homesys
    INTO CORRESPONDING FIELDS OF TABLE lt_attach
    FROM srgbtbrel
   WHERE typeid_a = gc_typeid
     AND catid_a  = gc_catid.

  IF sy-subrc NE 0.
    EXIT.
  ENDIF.

  SORT lt_attach BY instid_a.

  LOOP AT gt_master INTO gs_master.

    CONCATENATE gs_master-anln1 gs_master-bukrs INTO lv_instid.

* 업로드한 instid 로 파일이 존재 하는지 체크
    READ TABLE lt_attach INTO ls_attach WITH KEY instid_a = lv_instid
                                        BINARY SEARCH.

    IF sy-subrc EQ 0.
      gs_master-attach = icon_pdf.
      MODIFY gt_master FROM gs_master TRANSPORTING attach.
    ENDIF.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form get_single_master
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_single_master .
  CLEAR : gt_master.

  SELECT bukrs anln1 useye remvl
         depmt waers txt50 erdat
    INTO CORRESPONDING FIELDS OF TABLE gt_master
    FROM zc102fit0007
    WHERE anln1 = gs_body-anln1.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_anln1
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_anln1 CHANGING gv_num.
  CALL FUNCTION 'NUMBER_GET_NEXT'
    EXPORTING
      nr_range_nr = '01'
      object      = 'ZC102_AA'
    IMPORTING
      number      = gv_num.

*  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*    EXPORTING
*      input = gv_num.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form check_upload
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM check_upload .
  DATA : ls_attach TYPE srgbtbrel,
         lt_attach LIKE TABLE OF ls_attach,
         lv_instid TYPE srgbtbrel-instid_a.

  CLEAR   : ls_attach.
  REFRESH : lt_attach.

* 업로드한 Typid 로 기존에 업로드 되어 있는지 체크
  SELECT brelguid reltype  instid_a typeid_a catid_a instid_b typeid_b
         catid_b  logsys_a arch_a   logsys_b arch_b  utctime  homesys
    INTO CORRESPONDING FIELDS OF TABLE lt_attach
    FROM srgbtbrel
   WHERE typeid_a = gc_typeid
     AND catid_a  = gc_catid.

  IF sy-subrc NE 0.
    EXIT.
  ENDIF.

  SORT lt_attach BY instid_a.

*  CONCATENATE gv_anln1_pdf '1000' INTO lv_instid.
  lv_instid = gv_num && '1000'.

* 업로드한 instid 로 파일이 존재 하는지 체크
  READ TABLE lt_attach INTO ls_attach WITH KEY instid_a = lv_instid
                                      BINARY SEARCH.

  IF sy-subrc EQ 0.
    gv_check = abap_true.
  ELSE.
    CLEAR gv_check.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_init_value
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_init_value .
  gv_waers = 'KRW'.
  REFRESH so_gjahr.
  CLEAR so_gjahr.

  so_gjahr-sign   = 'I'.
  so_gjahr-option = 'EQ'.
  so_gjahr-low    = sy-datum(4).
  APPEND so_gjahr.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form delete_asset
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM delete_asset .
  DATA : lt_roid  TYPE lvc_t_roid,
         ls_roid  TYPE lvc_s_roid,
         lv_anln1 TYPE zc102fit0007-anln1.

  CLEAR : gs_body, gs_master, gv_anln1_del.

  CALL METHOD go_alv_grid->get_selected_rows
    IMPORTING
      et_row_no = lt_roid.

  IF lt_roid IS INITIAL.
    MESSAGE s009 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

  LOOP AT lt_roid INTO ls_roid.
    READ TABLE gt_body INTO gs_body INDEX ls_roid-row_id.
    READ TABLE gt_master INTO gs_master WITH KEY anln1 = gs_body-anln1.
    gv_anln1_del = gs_body-anln1.
  ENDLOOP.

  CALL SCREEN 130 STARTING AT 60 10.
  SORT gt_body BY werks anln1 ASCENDING.
  PERFORM refresh_table.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_delt_value
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_delt_value .
  gv_anln1_2 = gs_body-anln1.
  gv_bvalu = gs_body-bvalu.
  gv_desum = gs_body-desum.
  gv_erdat = gs_master-erdat.
  gv_buypr = gs_body-buypr.

  IF gv_lock = abap_true.
    gv_total = gv_minus - gv_bvalu.
  ENDIF.

  IF gv_total < 0.
    gv_icon = icon_led_red.
  ELSE.
    gv_icon = icon_led_green.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form asset_delete
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM asset_delete .
  DATA : lv_text(20).

  CLEAR : gv_tabix.

  IF gv_total IS INITIAL.
    MESSAGE s000 WITH TEXT-s03 DISPLAY LIKE 'E'.
    EXIT.
  ELSE.
    PERFORM popup_confirm USING TEXT-s02 CHANGING gv_answer.
  ENDIF.

  CHECK gv_answer EQ '1'.

*-- 삭제 플래그
  LOOP AT gt_master INTO gs_master WHERE anln1 = gv_anln1_del.
    gv_tabix = sy-tabix.

    IF sy-subrc = 0.
      gs_master-status = abap_true.
      MODIFY gt_master FROM gs_master INDEX gv_tabix
                                      TRANSPORTING status.
    ENDIF..

  ENDLOOP.

  CLEAR gv_tabix.

  LOOP AT gt_body INTO gs_body WHERE anln1 = gv_anln1_del.
    IF sy-subrc = 0.
      gs_body-status = abap_true.
      MODIFY gt_body FROM gs_body TRANSPORTING status.
    ENDIF.
  ENDLOOP.

  MODIFY zc102fit0007 FROM TABLE gt_master.
  MODIFY zc102fit0012 FROM TABLE gt_body.

  CLEAR gv_docu_num.

*-- 전표 생성
  IF gv_total >= 0.
    CALL FUNCTION 'ZFM_CL102_FI_04'
      EXPORTING
        iv_anln1               = gs_master-anln1
        iv_desum               = gv_desum
        iv_credit_wrbtr_asset  = gv_buypr
        iv_debit_wrbtr_cash    = gv_minus
        iv_credit_wrbtr_profit = gv_total
      IMPORTING
        ev_num                 = gv_docu_num.
  ELSE.
    gv_total = gv_total * -1.
    CALL FUNCTION 'ZFM_CL102_FI_02'
      EXPORTING
        iv_anln1              = gs_master-anln1
        iv_desum              = gv_desum
        iv_debit_wrbtr_cost   = gv_total
        iv_credit_wrbtr_asset = gv_buypr
        iv_debit_wrbtr_cash   = gv_minus
      IMPORTING
        ev_num                = gv_docu_num.
  ENDIF.

  PERFORM clear_delt.

  IF sy-subrc = 0.
    MESSAGE s072.
    COMMIT WORK.

    CLEAR : lv_text, gv_answer.
    lv_text = TEXT-009.
    PERFORM popup_confirm CHANGING lv_text gv_answer.

    IF gv_answer = 1.
      CLEAR gv_minus.
      gv_select = abap_true.
      CALL SCREEN 150 STARTING AT 10 10.
      LEAVE TO SCREEN 0.
    ELSE.
      LEAVE TO SCREEN 0.
    ENDIF.

  ELSE.
    MESSAGE s073 DISPLAY LIKE 'E'.
    ROLLBACK WORK.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form lock_screen
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM lock_screen .
  LOOP AT SCREEN.
    CASE screen-group1.
      WHEN 'VAL'.
        IF gv_create_lock = abap_true.
          MESSAGE s001 WITH TEXT-s04 DISPLAY LIKE 'E'.
          screen-intensified = '1'.
        ELSE.
          gv_create_lock = abap_false.
        ENDIF.

    ENDCASE.
    MODIFY SCREEN.

  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form check_value
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM check_value .
  IF ( zc102fit0012-werks IS NOT INITIAL ) AND
     ( zc102fit0007-useye IS NOT INITIAL ) AND
     ( zc102fit0007-depmt IS NOT INITIAL ) AND
     ( zc102fit0012-buypr IS NOT INITIAL ).
    gv_create_lock = abap_false.
  ELSE.
    gv_create_lock = abap_true.
  ENDIF.

  IF zc102fit0007-useye < 0.
    CLEAR zc102fit0007-useye.
    MESSAGE s000 WITH TEXT-008 DISPLAY LIKE 'E'.
    RETURN.
  ENDIF.

  IF zc102fit0007-remvl < 0.
    CLEAR zc102fit0007-remvl.
    MESSAGE s000 WITH TEXT-008 DISPLAY LIKE 'E'.
    RETURN.
  ENDIF.

  IF zc102fit0012-buypr < 0.
    CLEAR zc102fit0012-buypr.
    MESSAGE s000 WITH TEXT-008 DISPLAY LIKE 'E'.
    RETURN.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form check_sign
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM check_sign .
  IF gv_minus < 0.
    CLEAR gv_minus.
    MESSAGE s000 WITH TEXT-008 DISPLAY LIKE 'E'.
    RETURN.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form f4_bukrs
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f4_gjahr .
  DATA : lt_return   LIKE TABLE OF ddshretval WITH HEADER LINE.

  DATA : BEGIN OF ls_gjahr,
           gjahr TYPE zc102fit0012-gjahr,
         END OF ls_gjahr,
         lt_gjahr LIKE TABLE OF ls_gjahr.

  CLEAR lt_gjahr.

  SELECT DISTINCT gjahr
    INTO CORRESPONDING FIELDS OF TABLE lt_gjahr
    FROM zc102fit0012
    WHERE status <> 'X'.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      retfield        = 'GJAHR'
      dynpprog        = sy-repid
      dynpnr          = sy-dynnr
      dynprofield     = 'SO_GJAHR'
      window_title    = '회계 연도'
      value_org       = 'S'
    TABLES
      value_tab       = lt_gjahr
      return_tab      = lt_return
    EXCEPTIONS
      parameter_error = 1
      no_values_found = 2
      OTHERS          = 3.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_init_screen
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM set_init_screen .
  zc102fit0009-bukrs = '1000'.
  zc102fit0009-gjahr = sy-datum(4).

ENDFORM.
*&---------------------------------------------------------------------*
*& Form get_text_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_text_data .
  CLEAR gt_txt20.

  SELECT saknr txt20
    INTO CORRESPONDING FIELDS OF TABLE gt_txt20
    FROM zc102fit0002.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form docu_screen_ctrl
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM docu_screen_ctrl .
  IF go_line_cont IS NOT BOUND.
    CLEAR : gt_line_fcat, gs_line_fcat.
    PERFORM set_docu_fcat USING : 'X' 'BUKRS' 'C' ' ',
                                  'X' 'BELNR' 'C' ' ',
                                  'X' 'GJAHR' 'C' ' ',
                                  'X' 'BUZEI' ' ' ' ',
                                  ' ' 'BSCHL' 'C' 'X',
                                  ' ' 'SHKZG' 'C' 'X',
                                  ' ' 'KOART' 'C' ' ',
                                  ' ' 'SAKNR' 'C' ' ',
                                  ' ' 'TXT20' ' ' 'X',
                                  ' ' 'WRBTR' ' ' ' ',
                                  ' ' 'WAERS' 'C' 'X'.
    PERFORM set_docu_layout USING TEXT-t02.
    PERFORM set_variant USING 'ALV3'.
    PERFORM sort_docu_data.
    PERFORM creat_pop_obj.
    PERFORM display_docu_screen.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_docu_fcat
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&      --> P_
*&---------------------------------------------------------------------*
FORM set_docu_fcat USING pv_key pv_field pv_just pv_emph.
  gs_line_fcat = VALUE #( key = pv_key
                          fieldname = pv_field
                          ref_table = 'ZC102FIT0010'
                          just      = pv_just
                          emphasize = pv_emph ).

  CASE pv_field.
    WHEN 'WRBTR'.
      gs_line_fcat-cfieldname = 'WAERS'.
      gs_line_fcat-do_sum = abap_true.
    WHEN 'TXT20'.
      gs_line_fcat-ref_table = 'ZC102FIT0002'.
  ENDCASE.

  APPEND gs_line_fcat TO gt_line_fcat.
  CLEAR gs_line_fcat.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form sort_docu_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM sort_docu_data .
  CLEAR : gt_docu_sort1.
  gs_docu_sort-spos      = 1.
  gs_docu_sort-fieldname = 'SHKZG'.
  gs_docu_sort-down      = abap_true.
  gs_docu_sort-subtot    = abap_true.

  APPEND gs_docu_sort TO gt_docu_sort1.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form creat_pop_obj
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM creat_pop_obj .
  CREATE OBJECT go_line_cont
    EXPORTING
      container_name = 'DOCU_CONT'.

  CREATE OBJECT go_line_grid
    EXPORTING
      i_parent = go_line_cont.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form display_docu_screen
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM display_docu_screen .
  CALL METHOD go_line_grid->set_table_for_first_display
    EXPORTING
      is_variant      = gs_variant
      i_save          = 'A'
      i_default       = 'X'
      is_layout       = gs_docu_layout
    CHANGING
      it_outtab       = gt_line
      it_fieldcatalog = gt_line_fcat
      it_sort         = gt_docu_sort1.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form make_body
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM make_body .
  CLEAR : gs_line, gs_txt20, gv_tabix.

  LOOP AT gt_line INTO gs_line.
    gv_tabix = sy-tabix.
    READ TABLE gt_txt20 INTO gs_txt20 WITH KEY saknr = gs_line-saknr.
    IF sy-subrc = 0.
      gs_line-txt20 = gs_txt20-txt20.
    ENDIF.

    IF gs_line-shkzg = 'H'.
      gs_line-wrbtr = gs_line-wrbtr * -1.
    ENDIF.

    MODIFY gt_line FROM gs_line INDEX gv_tabix
                                TRANSPORTING wrbtr txt20.
  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form get_line_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM get_line_data .
  DATA : lt_header TYPE TABLE OF zc102fit0009,
         ls_header TYPE zc102fit0009.

  CLEAR : lt_header, ls_header, gt_line.
  IF gv_select IS INITIAL.
*-- 감가상각 전표 조회
    SELECT bukrs belnr gjahr blart
           bldat budat bktxt waers
      INTO CORRESPONDING FIELDS OF TABLE lt_header
      FROM zvfimonthc102
      WHERE bukrs = zc102fit0009-bukrs
      AND gjahr = zc102fit0009-gjahr
      AND m_item = gv_month
      AND bktxt LIKE '감가상각%'.

  ELSE.
*-- 자산 처분 전표 조회
    SELECT bukrs belnr gjahr blart
           bldat budat bktxt waers
      INTO CORRESPONDING FIELDS OF TABLE lt_header
      FROM zvfimonthc102
      WHERE belnr = gv_docu_num.

    CLEAR gv_select.
  ENDIF.

*-- Set Screen
  READ TABLE lt_header INTO ls_header INDEX 1.

  zc102fit0009-bukrs = ls_header-bukrs.
  zc102fit0009-belnr = ls_header-belnr.
  zc102fit0009-gjahr = ls_header-gjahr.
  zc102fit0009-blart = ls_header-blart.
  zc102fit0009-bktxt = ls_header-bktxt.
  zc102fit0009-bldat = ls_header-bldat.
  zc102fit0009-budat = ls_header-budat.
  zc102fit0009-waers = ls_header-waers.

  SELECT bukrs belnr gjahr buzei saknr
         bschl shkzg koart wrbtr waers
    INTO CORRESPONDING FIELDS OF TABLE gt_line
    FROM zc102fit0010
    WHERE belnr = ls_header-belnr
    ORDER BY buzei ASCENDING.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form set_docu_layout
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> TEXT_T02
*&---------------------------------------------------------------------*
FORM set_docu_layout  USING pv_title.
  gs_docu_layout-zebra      = abap_true.
  gs_docu_layout-cwidth_opt = 'A'.
  gs_docu_layout-sel_mode   = 'B'.
  gs_docu_layout-stylefname = 'CELL_TAB'.
  gs_docu_layout-grid_title = pv_title.
*  gs_docu_layout-totals_bef = abap_true.
*  gs_docu_layout-no_totline = abap_true.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form search_clicked_node_info
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> NODE_KEY
*&---------------------------------------------------------------------*
FORM search_clicked_node_info  USING pv_node_key.
  CLEAR gt_body.

  CASE pv_node_key.
    WHEN 'ROOT'.
      SELECT anln1 gjahr werks buypr bvalu desum
         deppr01 deppr02 deppr03 deppr04 deppr05
         deppr06 deppr07 deppr08 deppr09 deppr10
         deppr11 deppr12 waers
        INTO CORRESPONDING FIELDS OF TABLE gt_body
        FROM zc102fit0012
        WHERE gjahr IN so_gjahr
        AND bukrs <> ' '
        AND status <> 'X'
        ORDER BY werks anln1 ASCENDING..
    WHEN OTHERS.
      SELECT anln1 gjahr werks buypr bvalu desum
         deppr01 deppr02 deppr03 deppr04 deppr05
         deppr06 deppr07 deppr08 deppr09 deppr10
         deppr11 deppr12 waers
        INTO CORRESPONDING FIELDS OF TABLE gt_body
        FROM zc102fit0012
        WHERE gjahr IN so_gjahr
        AND status <> 'X'
        AND bukrs <> ' '
        AND  ( anln1 = pv_node_key OR werks = pv_node_key )
        ORDER BY werks anln1 ASCENDING.
  ENDCASE.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form REGISTER_TREE_EVENT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM register_tree_event .
  event-eventid = cl_gui_simple_tree=>eventid_node_double_click.
  event-appl_event = 'X'.
  APPEND event TO events.

  CALL METHOD go_tree->set_registered_events
    EXPORTING
      events                    = events
    EXCEPTIONS
      cntl_error                = 1
      cntl_system_error         = 2
      illegal_event_combination = 3
      OTHERS                    = 4.

  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form build_node
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM build_node .
  DATA: node    TYPE mtreesnode.

  node-node_key   = 'ROOT'.
  node-text       = '플랜트'.
  node-isfolder   = 'X'.
  node-n_image    = '@3M@'.   " 접은 이미지
  node-exp_image  = '@0N@'.   " 펼친 이미지

  APPEND node TO node_table.
  CLEAR : node, gs_master.

  LOOP AT gt_body INTO gs_body.
    ON CHANGE OF gs_body-werks.
      node-node_key = gs_body-werks.
      node-text = gs_body-werks.
      node-relatkey = 'ROOT'.
      node-isfolder = 'X'.
      node-n_image   = '@45@'. " 접은 이미지
      node-exp_image = '@45@'. " 펼친 이미지
      APPEND node TO node_table.
      CLEAR: node.
    ENDON.
*--------------------------------------------------------------------*
    node-node_key  = gs_body-anln1.
    node-relatkey  = gs_body-werks.
    node-isfolder  = ' '.
    node-n_image   = '@0M@'. " 접은 이미지
    node-exp_image = '@0M@'. " 펼친 이미지
    node-text = gs_body-anln1.
    APPEND node TO node_table.
    CLEAR node.

  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form clear_delt
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM clear_delt .
  CLEAR : gv_anln1_2, gv_erdat, gv_buypr, gv_desum,
          gv_bvalu, gv_minus, gv_total.
ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 758
